# ===================================
# Docker Compose - Sistema Completo
# Sistema de BoleterÃ­a - TicketVue
# ===================================
version: '3.8'

services:
  # ===================================
  # Base de Datos MySQL
  # ===================================
  mysql:
    image: mysql:8.0
    container_name: ticketvue-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-ticketvue}
      MYSQL_USER: ${DB_USER:-ticketuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-ticketpass}
    ports:
      - "${DB_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/database-schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ticketvue-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ===================================
  # Backend API (Node.js + Express)
  # ===================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ticketvue-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-ticketvue}
      DB_USER: ${DB_USER:-ticketuser}
      DB_PASSWORD: ${DB_PASSWORD:-ticketpass}
      JWT_SECRET: ${JWT_SECRET:-change_this_secret_in_production}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
      EMAIL_SERVICE: ${EMAIL_SERVICE:-gmail}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@ticketvue.com}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ticketvue-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://127.0.0.1:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===================================
  # Frontend (Vue.js + Nginx)
  # ===================================
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ticketvue-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    networks:
      - ticketvue-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1/"]
      interval: 30s
      timeout: 10s
      retries: 3

# ===================================
# Volumes
# ===================================
volumes:
  mysql_data:
    driver: local

# ===================================
# Networks
# ===================================
networks:
  ticketvue-network:
    driver: bridge
